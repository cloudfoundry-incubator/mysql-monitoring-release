#!/bin/bash

set -eu

PIPELINE_SUFFIX="${1:-}"

set_env() {
  MY_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
  CI_DIR="$( cd "${MY_DIR}/.." && pwd )"
  WORKSPACE_DIR="$( cd "${MY_DIR}/../.." && pwd )"
  CREDENTIALS_FILE="${CREDENTIALS_FILE:-deployments-core-services/credentials.yml}"
  if [[ "${CREDENTIALS_FILE}" != /* ]]; then
    CREDENTIALS_FILE="${WORKSPACE_DIR}/${CREDENTIALS_FILE}"
  fi
}

set_pipeline_name() {
  PIPELINE_NAME=mysql-monitoring-release
  PIPELINE_PATH=${MY_DIR}/pipelines/${PIPELINE_NAME}.yml
}

get_jobs() {
  gorgeous -F yaml -T json "${PIPELINE_PATH}" \
  | jq -c "[.jobs[].name]" \
  | tr -d '"'
}

update_pipeline_groups() {
  # bail if master since we've added more groups
  if [[ "${PIPELINE_NAME}" != cf-mysql && "${PIPELINE_NAME}" != cf-mysql-v22 && "${PIPELINE_NAME}" != cf-mysql-v24 ]]; then
    job_list=$(get_jobs)
    groups="groups: [{name: ${PIPELINE_NAME}, jobs: ${job_list}}]"
    sed "s/groups.*/${groups}/g" "${PIPELINE_PATH}" > "/tmp/groups.yml"
    mv /tmp/groups.yml "${PIPELINE_PATH}"
  fi
}

fly_pipeline() {
  fly -t concourse set-pipeline \
        -p "${PIPELINE_NAME}" \
        -c ${PIPELINE_PATH} \
        -l ${CREDENTIALS_FILE}
}

main() {
  set_env
  set_pipeline_name
  update_pipeline_groups
  fly_pipeline
}

main
